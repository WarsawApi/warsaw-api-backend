buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
    }
}

apply plugin: 'groovy'
apply plugin: 'spring-boot'

jar {
    baseName = 'gs-spring-boot'
    version = '0.1.0'
}

sourceSets {
    main {
        groovy {
            srcDirs = ['src/main/groovy']
        }
    }

    test {
        groovy {
            srcDirs = ['src/test/groovy']
        }
    }
}


repositories {
    jcenter()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile "org.springframework.boot:spring-boot-starter-jetty"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile("org.springframework:spring-context")

    compile "org.codehaus.groovy:groovy-all:2.4.3"
    compile 'org.codehaus.woodstox:woodstox-core-asl:4.4.1'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.5.3'
    compile 'postgresql:postgresql:9.1-901-1.jdbc4'

    testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
    testCompile files('libs/contracto-jvm-core-1.0.jar')
    testCompile files('libs/contracto-spring-1.0.jar')
    testCompile 'com.squareup.retrofit:retrofit:1.9.0'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir 
    rename {
        'app.jar'
    }
}
stage.mustRunAfter(clean)

clean << {
    project.file('app.jar').delete()
}

